version: "3"

services:
  mongo:
    restart: always
    image: mongo:4.0
    container_name: mongo
    volumes:
      - ./tableapp-data:/data/db

  table-backend:
    restart: always
    image: table-backend:latest
    container_name: table-backend
    depends_on:
      - mongo
    environment:
      VIRTUAL_HOST: table-api.example.com # your domain to backend
      LETSENCRYPT_HOST: table-api.example.com # automatic cert generation
      VIRTUAL_PORT: 4898 # default backend port

  table-client:
    restart: always
    image: table-client:dev
    container_name: table-client
    environment:
      VIRTUAL_HOST: table.example.com # your domain to frontend
      LETSENCRYPT_HOST: table.example.com # automatic cert generation
      VIRTUAL_PORT: 80 # default frontend port

  nginx-proxy:
    restart: always
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    volumes:
      - ./tableapp-proxy/conf:/etc/nginx/conf.d
      - ./tableapp-proxy/vhost:/etc/nginx/vhost.d
      - ./tableapp-proxy/html:/usr/share/nginx/html
      - ./tableapp-proxy/dhparam:/etc/nginx/dhparam
      - ./tableapp-proxy/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443

  acme-companion:
    restart: always
    image: nginxproxy/acme-companion:latest
    container_name: nginx-proxy-acme
    volumes:
      - ./tableapp-proxy/certs:/etc/nginx/certs:rw
      - ./tableapp-proxy/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
